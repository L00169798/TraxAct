# This GitHub Actions workflow builds, tests, and deploys the TraxAct application.
# It runs on push and pull requests targeting the master branch and handles deployments.

name: CI-CD

# Trigger the workflow on push or pull request events to the master branch.
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    # Run the build job on the latest version of Windows.
    runs-on: windows-latest

    steps:
      # Step 1: Checkout the code from the repository.
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up the .NET environment with the specified version.
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '7.0.x'

      # Step 3: Install the Java Development Kit (JDK) with the specified version.
      - name: Install JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '11'

      # Step 4: Add Roslyn Analyzers to the project for static code analysis.
      - name: Add Roslyn Analyzers
        run: |
          dotnet add TraxAct/src/TraxAct.csproj package Microsoft.CodeAnalysis.FxCopAnalyzers
          dotnet add TraxAct/src/TraxAct.csproj package Microsoft.CodeAnalysis.NetAnalyzers

      # Step 5: Install .NET MAUI workload, required for building MAUI applications.
      - name: Install .NET MAUI
        run: dotnet workload install maui

      # Step 6: Clean the solution, build the project, and run code analysis.
      - name: Build and Run Code Analysis
        run: |
          dotnet clean
          dotnet build TraxAct/TraxAct.sln /p:ReportAnalyzer=true

      # Step 7: Run the unit tests for the project.
      - name: Run Tests
        run: dotnet test TraxAct/TraxActUnitTests/TraxActUnitTests.csproj --no-restore --verbosity normal

  codeql-analysis:
    # Run the CodeQL analysis job after the build job completes successfully.
    runs-on: windows-latest
    needs: build
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      # Step 1: Checkout the code from the repository.
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Initialize CodeQL for analysis.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: dotnet

      # Step 3: Build the project to prepare for CodeQL analysis.
      - name: Build the project
        run: |
          dotnet clean
          dotnet build TraxAct/TraxAct.sln

      # Step 4: Perform CodeQL analysis to detect security vulnerabilities and other issues.
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  deploy:
    # Deploy jobs to different environments.
    runs-on: ubuntu-latest

    strategy:
      matrix:
        environment: [development, staging, production]

    needs: build
    if: |
      (matrix.environment == 'development') ||
      (matrix.environment == 'staging' && github.event_name == 'push' && github.ref == 'refs/heads/master') ||
      (matrix.environment == 'production' && github.event_name == 'push' && startsWith(github.ref, 'refs/tags/'))

    steps:
      - name: Deploy to ${{ matrix.environment }} environment
        run: echo "Deploying to ${{ matrix.environment }} environment..."
