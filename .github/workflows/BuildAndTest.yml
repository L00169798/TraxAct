# This GitHub Actions workflow builds and tests the TraxAct application
# It runs on push and pull requests targeting the master branch.
# The workflow sets up the .NET environment, installs the Java Development Kit (JDK), and builds the project.

name: Build and Test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '7.0.x'

      - name: Install JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Install .NET MAUI workloads
        run: |
          dotnet workload install maui-android maui-windows maui-tizen
          
      - name: Build and Run Code Analysis
        run: |
          dotnet clean
          dotnet build TraxAct/TraxAct.sln /p:ReportAnalyzer=true
          
      - name: Run Tests
        run: |
          dotnet test TraxAct/TraxActUnitTests/TraxActUnitTests.csproj --no-restore --verbosity normal

      - name: Login to GitHub Container Registry
        run: |
          echo "${{ secrets.GH_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Docker image
        run: |
          docker build -t traxact-app -f TraxAct/Dockerfile .
          
      - name: Tag Docker image
        run: |
          docker tag traxact-app ghcr.io/$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')/traxact-app:latest
          
      - name: Push Docker image to registry
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker push ${{ secrets.DOCKER_USERNAME }}/traxact-app:latest
          
  codeql-analysis:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: csharp

    - name: Build the code
      run: |
        dotnet workload install maui-android maui-windows maui-tizen
        dotnet build TraxAct/TraxAct.sln --configuration Release
        
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

  deploy_to_dev:
    name: Deploy to Development
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to development environment
        run: |
          echo "Deploying to development environment..."
          # Add deployment scripts/commands here

  deploy_to_staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
      - name: Deploy to staging environment
        run: |
          echo "Deploying to staging environment..."
          # Add deployment scripts/commands here

  deploy_to_prod:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: deploy_to_staging
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Deploy to production environment
        run: |
          echo "Deploying to production environment..."
          # Add deployment scripts/commands here

